diff --git a/src/middleware.ts b/src/middleware.ts
index b9cdc02..e6d546e 100644
--- a/src/middleware.ts
+++ b/src/middleware.ts
@@ -36,16 +36,43 @@ export async function middleware(request: NextRequest) {
     });
   }
 
+  // Signpost base
   if (!request.cookies.get("signpost-feed")) {
     const signpostFeed = await fetchSignpostFeed();
     response.cookies.set({
       name: "signpost-feed",
       value: JSON.stringify(signpostFeed),
-      path: "/signpost",
+      path: "/",
       expires: new Date(Date.now() + 30 * 60 * 1000), // In 30 minutes
     });
   }
 
+  // Person base
+  if (!request.cookies.get("tickets") || !request.cookies.get("verification")) {
+    const p = (await person()).fields;
+
+    const tickets = Number(p["settled_tickets"]);
+    response.cookies.set({
+      name: "tickets",
+      value: JSON.stringify(tickets),
+      path: "/",
+      expires: new Date(Date.now() + 5 * 60 * 1000), // In 5 minutes
+    });
+
+    const verificationStatus = p["verification_status"][0];
+    const verificationReason = p["Rejection Reason"];
+    console.log(p);
+    response.cookies.set({
+      name: "verification",
+      value: JSON.stringify({
+        status: verificationStatus,
+        reason: verificationReason,
+      }),
+      path: "/",
+      expires: new Date(Date.now() + 5 * 60 * 1000), // In 5 minutes
+    });
+  }
+
   return response;
 }
 
diff --git a/src/middleware.ts b/src/middleware.ts
index b9cdc02..e6d546e 100644
--- a/src/middleware.ts
+++ b/src/middleware.ts
@@ -36,16 +36,43 @@ export async function middleware(request: NextRequest) {
     });
   }
 
+  // Signpost base
   if (!request.cookies.get("signpost-feed")) {
     const signpostFeed = await fetchSignpostFeed();
     response.cookies.set({
       name: "signpost-feed",
       value: JSON.stringify(signpostFeed),
-      path: "/signpost",
+      path: "/",
       expires: new Date(Date.now() + 30 * 60 * 1000), // In 30 minutes
     });
   }
 
+  // Person base
+  if (!request.cookies.get("tickets") || !request.cookies.get("verification")) {
+    const p = (await person()).fields;
+
+    const tickets = Number(p["settled_tickets"]);
+    response.cookies.set({
+      name: "tickets",
+      value: JSON.stringify(tickets),
+      path: "/",
+      expires: new Date(Date.now() + 5 * 60 * 1000), // In 5 minutes
+    });
+
+    const verificationStatus = p["verification_status"][0];
+    const verificationReason = p["Rejection Reason"];
+    console.log(p);
+    response.cookies.set({
+      name: "verification",
+      value: JSON.stringify({
+        status: verificationStatus,
+        reason: verificationReason,
+      }),
+      path: "/",
+      expires: new Date(Date.now() + 5 * 60 * 1000), // In 5 minutes
+    });
+  }
+
   return response;
 }
 
